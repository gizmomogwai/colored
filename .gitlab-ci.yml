prepare-docker-image:
  stage: .pre
  image: docker:stable
  services:
    - docker:dind
  script:
    - env
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - cd .gitlab
    - docker build -t $CI_REGISTRY/gizmomogwai/colored/buildimage:latest .
    - docker push $CI_REGISTRY/gizmomogwai/colored/buildimage:latest
#  only:
#    changes:
#      - Dockerfile

default:
    image: registry.gitlab.com/gizmomogwai/colored/buildimage:latest

build:
  stage: build
  script:
    - echo $DLANG_COMPILER
    - source ~/dlang/$DLANG_COMPILER-*/activate
    - dub --version
    - dub build
  parallel:
    matrix:
      - DLANG_COMPILER: ["dmd", "ldc"]
    

unit-test:
  stage: test
  script:
    - source ~/dlang/dmd-*/activate
    - dub test --coverage && codecov
#  artifacts:
#    paths:
#      - "*.lst"

lint:   # This job also runs in the test stage.
  stage: test    # It can run at the same time as unit-test-job (in parallel).
  script:
    - source ~/dlang/dmd-*/activate
    - dub run dscanner -- --version
    - dub run dscanner -- --styleCheck source

pages:
  stage: deploy
  script:
    - source ~/dlang/dmd-*/activate
    - dub build --build=ddox
    - mv docs public
  artifacts:
    paths:
      - public

#codecov:
#  stage: deploy
#  script:
#    - codecov
#deploy-job:      # This job runs in the deploy stage.
#  stage: deploy  # It only runs when *both* jobs in the test stage complete successfully.
#  script:
#    - echo "Deploying application..."
#    - echo "Application successfully deployed."
